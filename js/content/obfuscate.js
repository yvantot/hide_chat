let obfObserver,obfInterval,obfTimeout,obfIntervalChatLeft;function makeObfInject(t){const e=new Set(t.filter((t=>t.isObfuscated)).map((t=>t.chatURL)));function r(){if(obfIntervalChatLeft&&clearInterval(obfIntervalChatLeft),obfIntervalChatLeft=setInterval((()=>{const t=document.querySelector(SELECTORS.CHATCONTAINER);if(t){const r=t?.children;for(let t=0;t<r.length;t++){const o=r[t].querySelector(SELECTORS.CHATLINK);if(o){const t=getChatId(o.href);e.has(t)&&o.querySelectorAll(`${SELECTORS.DIVIMG}, ${SELECTORS.TEXTSPAN}`).forEach((t=>{"IMG"===(t=t.closest("div")).tagName&&t?.setAttribute("data-obfmedia","true"),t?.setAttribute("data-obftext","true")}))}}}}),1e3),isMessenger){let t=document.querySelector(SELECTORS.MESSAGECONTAINER);obfInterval&&clearInterval(obfInterval),obfTimeout&&clearTimeout(obfTimeout),obfInterval=setInterval((()=>{t||(t=document.querySelector(SELECTORS.MESSAGECONTAINER)),t&&(obfRuleModifyAttr(),e.has(getCurrentChat())?injectMessagesAttr("true",t):injectMessagesAttr("false",t))}),500),obfTimeout=setTimeout((()=>{obfInterval&&clearInterval(obfInterval),onMessageChange((()=>{obfRuleModifyAttr(),e.has(getCurrentChat())?injectMessagesAttr("true",t):injectMessagesAttr("false",t)}))}),1e4)}else{let t=document.querySelectorAll(SELECTORS.MESSAGECONTAINER);obfInterval&&clearInterval(obfInterval),obfTimeout&&clearTimeout(obfTimeout),obfInterval=setInterval((()=>{t=document.querySelectorAll(SELECTORS.MESSAGECONTAINER),obfRuleModifyAttr();for(let e=0;e<t.length;e++)injectMessagesAttr("true",t[e])}),1e3)}}whenAvail((()=>document.querySelector(SELECTORS.MESSAGECONTAINER)),(()=>r()))}function injectMessagesAttr(t,e){if(!e)return;e.querySelectorAll(`\n\t\t\t${SELECTORS.MESSAGEROW} ${SELECTORS.TEXT},\n\t\t\t${SELECTORS.MESSAGEROW} ${SELECTORS.STICKERS},\n\t\t\t${SELECTORS.MESSAGEROW} ${SELECTORS.REPLYTEXT},\n\t\t\t${SELECTORS.MESSAGEROW} ${SELECTORS.VIDEO},\n\t\t\t${SELECTORS.MESSAGEROW} ${SELECTORS.AIMG},\n\t\t\t${SELECTORS.MESSAGEROW} ${SELECTORS.DIVIMG}\n   \t\t`).forEach((e=>{"VIDEO"!==e.tagName&&"IMG"!==e.tagName?e?.setAttribute("data-obftext",t):(e=e.closest("div"))?.setAttribute("data-obfmedia",t)}))}function obfRuleModifyAttr(){document.querySelectorAll(`${SELECTORS.MESSAGEROW} ${SELECTORS.TEXT}`).forEach((t=>{t.textContent.includes("@pxl")&&t.setAttribute("data-obfpxl","true"),t.textContent.includes("@blr")&&t.setAttribute("data-obfblr","true"),t.textContent.includes("@flp")&&t.setAttribute("data-obfflp","true"),t.textContent.includes("@dim")&&t.setAttribute("data-obfdim","true"),t.textContent.includes("@pxl")||t.removeAttribute("data-obfpxl"),t.textContent.includes("@blr")||t.removeAttribute("data-obfblr"),t.textContent.includes("@flp")||t.removeAttribute("data-obfflp"),t.textContent.includes("@dim")||t.removeAttribute("data-obfdim")}))}function onMessageChange(t){whenAvail((()=>document.querySelector(`${SELECTORS.MESSAGECONTAINER}`)),(()=>{let e=document.querySelector(`${SELECTORS.MESSAGECONTAINER}`);obfObserver&&obfObserver.disconnect(),obfObserver=new MutationObserver((()=>setTimeout((()=>t()),2e3))),obfObserver.observe(e,{childList:!0})}))}function obfInject(t,e,r,o){document.getElementById("hidechat-obfuscate")?.remove();const a={blur:[`filter: blur(${r}px) !important;`,"filter: none !important;"],opacity:[`opacity: ${o} !important;`,"opacity: 1 !important;"],flip:["transform: scaleX(-1) !important;","transform: none !important;"],pixelate:["filter: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='b' x='0' y='0'%3E%3CfeFlood x='4' y='4' height='2' width='2'/%3E%3CfeComposite width='10' height='10'/%3E%3CfeTile result='a'/%3E%3CfeComposite in='SourceGraphic' in2='a' operator='in'/%3E%3CfeMorphology operator='dilate' radius='5'/%3E%3C/filter%3E%3C/svg%3E#b\") !important;","filter: none !important;"]};let i="",n="",l="",f="",u="",E="",d="",s="",c=!1,b=!1;t.includes("blur")&&t.includes("pixelate")&&(u=`${a.blur[0].replace(" !important;","")} ${a.pixelate[0].replace("filter: ","")}`,E=`${a.blur[1]}`,c=!0),e.includes("blur")&&e.includes("pixelate")&&(d=`${a.blur[0].replace(" !important;","")} ${a.pixelate[0].replace("filter: ","")}`,s=`${a.blur[1]}`,b=!0),t.forEach((t=>{void 0!==a[t]&&(c&&"blur"==t||c&&"pixelate"==t||(i+=`${a[t][0]}`,l+=`${a[t][1]}`))})),e.forEach((t=>{void 0!==a[t]&&(b&&"blur"===t||b&&"pixelate"===t||(n+=`${a[t][0]}`,f+=`${a[t][1]}`))}));const S=document.createElement("style");S.setAttribute("id","hidechat-obfuscate"),S.innerHTML+=`div[data-obftext='true'] { ${i} ${u} } div[data-obftext='true']:hover { ${l} ${E} } `,S.innerHTML+=`div[data-obfmedia='true'] { ${n} ${d} } div[data-obfmedia='true']:hover { ${f} ${s}} `,document.head.appendChild(S)}function obfRuleInject(){const t=document.createElement("style");t.setAttribute("id","hidechat-obfrule"),t.innerHTML+="div[data-obfpxl=\"true\"] { filter: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='b' x='0' y='0'%3E%3CfeFlood x='4' y='4' height='2' width='2'/%3E%3CfeComposite width='10' height='10'/%3E%3CfeTile result='a'/%3E%3CfeComposite in='SourceGraphic' in2='a' operator='in'/%3E%3CfeMorphology operator='dilate' radius='5'/%3E%3C/filter%3E%3C/svg%3E#b\") !important; } div[data-obfpxl=\"true\"]:hover { filter: none !important; }",t.innerHTML+='div[data-obfflp="true"] { transform: scaleX(-1) !important; } div[data-obfflp="true"]:hover { transform: scaleX(1) !important; }',t.innerHTML+='div[data-obfblr="true"] { filter: blur(8px) !important; } div[data-obfblr="true"]:hover { filter: blur(0px) !important; }',t.innerHTML+='div[data-obfdim="true"] { opacity: 0.1 !important; } div[data-obfdim="true"]:hover { opacity: 1 !important; }',document.head.appendChild(t)}